cabal-version: 3.4
name:          comptrans
version:       0.1.0.7
synopsis:      Automatically converting ASTs into compositional data types
description:

  Template Haskell for converting an AST for a language written using normal
  algebraic data types into ones written using multi-sorted compositional data types
  (`Data.Comp.Multi` from the `compdata` library) so that you can use generic and modular operators
  on it. You might need to add additional constructors that can e.g.: convert a (Term e Foo) into a
  (Term e [Foo]).
  .
  The sCource files have comments showing example output for a simple language. See the examples directory
  for an extended example of generating a compositional data type for the entire Java language, with labelled variants
  as well as variants where an entire project of source files can be treated as a single AST -- and you can use the same operations
  on all of them!
category:      Data,Generics
homepage:      https://github.com/jkoppel/comptrans#readme
bug-reports:   https://github.com/jkoppel/comptrans/issues
author:        James Koppel
maintainer:    jkoppel@mit.edu
license:       BSD-3-Clause
license-file:  LICENSE
build-type:    Simple

extra-source-files:
  examples/generics/GenericExample.hs

tested-with:
  GHC == 9.8.4

common language
  default-language: Haskell2010
  default-extensions:
    ApplicativeDo
    BangPatterns
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveLift
    DeriveTraversable
    DerivingStrategies
    EmptyCase
    ExistentialQuantification
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTs
    GeneralizedNewtypeDeriving
    ImportQualifiedPost
    InstanceSigs
    KindSignatures
    LambdaCase
    MultiParamTypeClasses
    MultiWayIf
    NamedFieldPuns
    OverloadedStrings
    PatternSynonyms
    QuasiQuotes
    RankNTypes
    ScopedTypeVariables
    StandaloneDeriving
    TupleSections
    TypeApplications
    TypeFamilies
    TypeFamilyDependencies
    TypeOperators
    ViewPatterns

common ghc-options
  ghc-options: -Wall

library
  import: language
  import: ghc-options
  hs-source-dirs: src
  exposed-modules:
    Data.Comp.Trans

  other-modules:
    Data.Comp.Trans.Collect
    Data.Comp.Trans.DeriveMulti
    Data.Comp.Trans.DeriveTrans
    Data.Comp.Trans.DeriveUntrans
    Data.Comp.Trans.Util
    Paths_comptrans

  build-depends:
    , base >= 4.19.2.0
    , bytestring >= 0.12.1.0
    , containers >= 0.6.8
    , cubix-compdata >= 1.0.2
    , deepseq >= 1.5.1.0
    , deepseq-generics >= 0.2.0.0
    , lens >= 5.3.4
    , mtl >= 2.3.1
    , syb >= 0.7.2.4
    , template-haskell >= 2.21.0.0
    , text >= 2.1.1
    , th-expand-syns >= 0.4.12.0
    , transformers >= 0.6.1.0




